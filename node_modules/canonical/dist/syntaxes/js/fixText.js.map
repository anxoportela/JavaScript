{"version":3,"sources":["syntaxes/js/fixText.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAMA,IAAM,MAAM,sBAAc;AACtB,uBAAmB,IAAnB;AACA,gBAAY,KAAZ;AACA,gBAAY,QAAQ,OAAR,CAAgB,iBAAhB,CAAZ;AACA,UAAM,EAAN;AACA,gBAAY,EAAZ;AACA,SAAK,IAAL;AACA,aAAS,EAAT;AACA,YAAQ,QAAQ,OAAR,CAAgB,cAAhB,CAAR;AACA,eAAW,EAAX;AACA,iBAAa,KAAb;CAVQ,CAAN;;AAaN,IAAM,UAAU,SAAV,OAAU,CAAC,IAAD,EAA0B;AACtC,QAAM,SAAS,IAAI,aAAJ,CAAkB,IAAlB,EAAwB,OAAxB,CAAgC,CAAhC,CAAT,CADgC;;AAGtC,QAAM,aAAa,oBAAO,OAAO,QAAP,EAAiB;AACvC,eAAO,IAAP;KADe,CAAb,CAHgC;;AAOtC,QAAI,UAAJ,EAAgB;AACZ,cAAM,IAAI,KAAJ,CAAU,WAAW,OAAX,GAAqB,UAArB,GAAkC,WAAW,IAAX,GAAkB,YAApD,GAAmE,WAAW,MAAX,GAAoB,IAAvF,CAAhB,CADY;KAAhB;;AAIA,WAAO,OAAO,MAAP,IAAiB,IAAjB,CAX+B;CAA1B;;kBAcD,UAAC,IAAD,EAA0B;AACrC,QAAI,cAAJ;QACI,0BADJ;QAEI,eAFJ,CADqC;;AAKrC,wBAAoB,GAApB,CALqC;AAMrC,aAAS,IAAT;;;AANqC,OASlC;AACC,gBAAQ,MAAR,CADD;;AAGC,iBAAS,QAAQ,KAAR,CAAT,CAHD;;AAKC,YAAI,EAAE,iBAAF,GAAsB,CAAtB,EAAyB;AACzB,kBAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN,CADyB;SAA7B;KALJ,QAQS,WAAW,KAAX,EAjB4B;;AAmBrC,WAAO,MAAP,CAnBqC;CAA1B","file":"syntaxes/js/fixText.js","sourcesContent":["import _ from 'lodash';\n\nimport {\n    CLIEngine\n} from 'eslint';\n\nconst cli = new CLIEngine({\n    allowInlineConfig: true,\n    baseConfig: false,\n    configFile: require.resolve('./eslintrc.json'),\n    envs: [],\n    extensions: [],\n    fix: true,\n    globals: [],\n    parser: require.resolve('babel-eslint'),\n    rulePaths: [],\n    useEslintrc: false\n});\n\nconst fixText = (text: string): string => {\n    const report = cli.executeOnText(text).results[0];\n\n    const fatalError = _.find(report.messages, {\n        fatal: true\n    });\n\n    if (fatalError) {\n        throw new Error(fatalError.message + ' (line: ' + fatalError.line + ', column: ' + fatalError.column + ').');\n    }\n\n    return report.output || text;\n};\n\nexport default (text: string): string => {\n    let input,\n        maxIterationCount,\n        output;\n\n    maxIterationCount = 100;\n    output = text;\n\n    // @see https://github.com/eslint/eslint/issues/5004\n    do {\n        input = output;\n\n        output = fixText(input);\n\n        if (--maxIterationCount < 0) {\n            throw new Error('Max iteration count.');\n        }\n    } while (output !== input);\n\n    return output;\n};\n"],"sourceRoot":"/source/"}