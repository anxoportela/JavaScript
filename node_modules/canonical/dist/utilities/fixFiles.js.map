{"version":3,"sources":["utilities/fixFiles.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;kBASe,UAAC,SAAD,EAA6C;AACxD,QAAM,SAAS;AACX,iBAAS,EAAT;KADE,CADkD;;AAKxD,2BAAU,SAAV,EAAqB,UAAC,QAAD,EAAc;AAC/B,YAAM,gBAAgB,eAAK,OAAL,CAAa,QAAb,CAAhB,CADyB;;AAG/B,YAAI,oBAAU,aAAV,CAAJ,EAA8B;AAC1B,gBAAM,OAAO,aAAG,YAAH,CAAgB,QAAhB,EAA0B,MAA1B,CAAP,CADoB;AAE1B,gBAAM,SAAS,uBAAQ,IAAR,EAAc;AACzB,wBAAQ,oBAAU,aAAV,CAAR;aADW,CAAT,CAFoB;;AAM1B,yBAAG,aAAH,CAAiB,QAAjB,EAA2B,MAA3B,EAN0B;;AAQ1B,mBAAO,OAAP,CAAe,IAAf,CAAoB;AAChB,kCADgB;AAEhB,8BAFgB;aAApB,EAR0B;SAA9B,MAYO;;AAEH,oBAAQ,IAAR,CAAa,oBAAoB,QAApB,GAA+B,0BAA/B,GAA4D,aAA5D,GAA4E,cAA5E,CAAb;;AAFG,SAZP;KAHiB,CAArB,CALwD;;AA2BxD,WAAO,MAAP,CA3BwD;CAA7C","file":"utilities/fixFiles.js","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport _ from 'lodash';\nimport fixText from './fixText';\nimport syntaxMap from './../syntaxMap';\nimport type {\n    FixReportType\n} from './../types';\n\nexport default (filePaths: Array<string>): FixReportType => {\n    const report = {\n        results: []\n    };\n\n    _.forEach(filePaths, (filePath) => {\n        const extensionName = path.extname(filePath);\n\n        if (syntaxMap[extensionName]) {\n            const text = fs.readFileSync(filePath, 'utf8');\n            const output = fixText(text, {\n                syntax: syntaxMap[extensionName]\n            });\n\n            fs.writeFileSync(filePath, output);\n\n            report.results.push({\n                filePath,\n                output\n            });\n        } else {\n            /* eslint-disable no-console */\n            console.warn('Ignoring file \"' + filePath + '\". No syntax mapped to \"' + extensionName + '\" extension.');\n            /* eslint-enable no-console */\n        }\n    });\n\n    return report;\n};\n"],"sourceRoot":"/source/"}