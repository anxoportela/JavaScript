{"version":3,"sources":["utilities/bin/getTargetPaths.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAOe,UAAC,WAAD,EAA+C;AAC1D,QAAI,cAAJ,CAD0D;;AAG1D,QAAM,cAAc,EAAd,CAHoD;;AAK1D,QAAI,YAAY,MAAZ,EAAoB;AACpB,gBAAQ,WAAR,CADoB;KAAxB,MAEO;AACH,gBAAQ,CAAC,IAAD,CAAR,CADG;KAFP;;AAMA,YAAQ,sBAAS,KAAT,EAAgB,UAAC,QAAD,EAAc;AAClC,YAAM,UAAU,wBAAW,QAAX,EAAqB,GAArB,MAA8B,IAA9B,CADkB;;AAGlC,YAAI,OAAJ,EAAa;AACT,wBAAY,IAAZ,CAAiB,WAAW,SAAX,CAAjB,CADS;AAET,wBAAY,IAAZ,CAAiB,WAAW,UAAX,CAAjB,CAFS;AAGT,wBAAY,IAAZ,CAAiB,WAAW,WAAX,CAAjB,CAHS;SAAb;;AAMA,eAAO,CAAC,OAAD,CAT2B;KAAd,CAAxB,CAX0D;;AAuB1D,YAAQ,MAAM,MAAN,CAAa,WAAb,CAAR,CAvB0D;AAwB1D,YAAQ,oBAAO,KAAP,CAAR,CAxB0D;;AA0B1D,YAAQ,iBAAK,IAAL,CAAU,KAAV,CAAR;;;;AA1B0D,SA8B1D,GAAQ,mBAAM,KAAN,gCAAR,CA9B0D;;AAgC1D,WAAO,KAAP,CAhC0D;CAA/C","file":"utilities/bin/getTargetPaths.js","sourcesContent":["import _ from 'lodash';\nimport glob from 'globby';\nimport resolveAbsolutePath from './resolveAbsolutePath';\n\n/**\n * Resolve an array of glob paths.\n */\nexport default (searchPaths: Array<string>): Array<string> => {\n    let paths;\n\n    const appendPaths = [];\n\n    if (searchPaths.length) {\n        paths = searchPaths;\n    } else {\n        paths = ['./'];\n    }\n\n    paths = _.filter(paths, (pathName) => {\n        const exclude = _.endsWith(pathName, '/') === true;\n\n        if (exclude) {\n            appendPaths.push(pathName + '**/*.js');\n            appendPaths.push(pathName + '**/*.css');\n            appendPaths.push(pathName + '**/*.scss');\n        }\n\n        return !exclude;\n    });\n\n    paths = paths.concat(appendPaths);\n    paths = _.uniq(paths);\n\n    paths = glob.sync(paths);\n    // @todo Test whether glob.sync can return non-unique file paths.\n    // paths = _.unique(paths);\n\n    paths = _.map(paths, resolveAbsolutePath);\n\n    return paths;\n};\n"],"sourceRoot":"/source/"}